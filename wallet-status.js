const { Connection, PublicKey, clusterApiUrl } = require("@solana/web3.js");

exports.handler = async function (event, context) {
    try {
        // üü¢ –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π SOL-–∞–¥—Ä–µ—Å –≥–∞–º–∞–Ω—Ü—è
        const WALLET_ADDRESS = "3EwV6VTHYHrkrZ3UJcRRAxnuHiaeb8EntqX85Khj98Zo";

        // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ mainnet Solana
        const connection = new Connection(clusterApiUrl("mainnet-beta"), "confirmed");
        const publicKey = new PublicKey(WALLET_ADDRESS);

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –≥–∞–º–∞–Ω—Ü—è –≤ –ª–∞–º–ø–æ—Ä—Ç–∞—Ö (1 SOL = 1_000_000_000 –ª–∞–º–ø–æ—Ä—Ç—ñ–≤)
        const balanceLamports = await connection.getBalance(publicKey);
        const balanceSOL = balanceLamports / 1_000_000_000;

        return {
            statusCode: 200,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                status: "connected",
                wallet: WALLET_ADDRESS,
                balance: balanceSOL,
                currency: "SOL"
            })
        };
    } catch (error) {
        return {
            statusCode: 500,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ error: "Internal Server Error", details: error.message })
        };
    }
};
